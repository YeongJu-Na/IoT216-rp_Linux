#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <sys/socket.h>	// bsd 소켓의 핵심 함수와 데이터 구조
#include <arpa/inet.h>	// 프로토콜 및 호스트 이름을 숫자 주소로 변환--> 로컬데이터와 dns검색
#include <unistd.h>
#include <fcntl.h>
#include <wiringPi.h>
#include <pthread.h>

char *IP = "192.168.0.52";
int PORT = 9001;
int sock;	// socket handle
void *readProc();
int main(){
	
	pthread_t readThread;
	
	// 초음파 센서
	int wTrig=15, wEcho=16;
	wiringPiSetup();
	pinMode(wTrig,OUTPUT);
	pinMode(wEcho,INPUT);
	
	int i,j,k;
	struct sockaddr_in sockinfo;
	char buf[1024];
	
	sock= socket(AF_INET, SOCK_STREAM, 0);  // 스트림 방식으로 인터넷 망에 접속하기 위한 소켓을 생성
	
	sockinfo.sin_family = AF_INET;  // 주소 체계로서 ipv4를 사용하는 인터넷 망에 접속 - Address Family
	inet_pton(AF_INET, IP, &sockinfo.sin_addr.s_addr);	// 사람이 알아보기 쉬운 텍스트형태의 ip 주소를 binary 형태로 변환
	sockinfo.sin_port = htons(PORT);	// htons- unsigned short형의 Endian변환
	
	connect(sock, (struct sockaddr*)&sockinfo, sizeof(sockinfo));
	k=fcntl(sock, F_SETFL,0);  // F_SETFL: setting flag, 현재 소켓의 flag 가져오기
	fcntl(sock, F_SETFL, k | O_NONBLOCK);	//Output nonbolck
	pthread_create(&readThread, NULL, readProc, NULL);
	
	while(1){
		
		digitalWrite(wTrig, LOW);
		delayMicroseconds(100);
		
		digitalWrite(wTrig, HIGH);
		delayMicroseconds(10);
		
		digitalWrite(wTrig, LOW);
		delayMicroseconds(200);
		
		while(digitalRead(wEcho)==LOW);
		long start = micros();
		
		while(digitalRead(wEcho)==HIGH);
		long end = micros();
		
		double dist = (end-start)*0.17;
		sprintf(buf,"%f",dist);
		send(sock,buf,strlen(buf),0);
		
		//printf("%f\n",dist);
		delay(1000);
		/*
		scanf("%s",buf);
		if(buf[0]=='q') break;
		send(sock,buf, strlen(buf),0);
		
		i=recv(sock,buf,1024,0);	// blocking
		if(i>0) buf[i]=0;
		if(buf[0]=='q') break;
		printf("%s\n",buf);
		 */
	}
	close(sock);
	pthread_join(readThread, NULL);	// 스레드 종료까지 기다림
	return 0;
}

void *readProc(){
	int i;
	char buf[1024];
	while(1){
		i=recv(sock,buf,1024,0);	// blocking
		
		if(i>0){
			buf[i]=0;
			printf("%s\n",buf);
		}
		delay(500);
	}
	return NULL;
}
